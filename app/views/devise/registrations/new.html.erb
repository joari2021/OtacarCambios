<div class="container bg-nav">
    <div class="margin-top pt-3 px-3 pb-2">
        <h2 class="text-uppercase text-success font-weight-bold mb-5">crear cuenta</h2>

        <%= form_for(resource, as: resource_name, url: registration_path(resource_name), class:"was-validated") do |f| %>
        <%= render "devise/shared/error_messages", resource: resource %>

        <div class="form-row field">
            <div class="col-6 col-md-3 mb-2">
                <label for="validationDefault01">Primer Nombre</label>
                <input type="text" class="form-control is-invalid" id="validationDefault01" placeholder="Ingresa tu primer nombre" name="user[name]" onkeypress="return soloLetras(event,this)" onkeyup="return validarInput(event,this)" required>
                <div class="invalid-feedback">
                    Ingrese solo letras
                </div>
            </div>

            <div class="col-6 col-md-3 mb-2">
                <label for="validationDefault02">Segundo Nombre</label>
                <input type="text" class="form-control is-invalid" id="validationDefault02" placeholder="Ingresa tu segundo nombre" name="user[second_name]" onkeypress="return soloLetras(event,this)" onkeyup="return validarInput(event,this)" required>
                <div class="invalid-feedback">
                    Ingrese solo letras
                </div>
            </div>

            <div class="col-6 col-md-3 mb-2">
                <label for="validationDefault03">Primer Apellido</label>
                <input type="text" class="form-control is-invalid" id="validationDefault03" placeholder="Ingresa tu primer apellido" name="user[last_name]" onkeypress="return soloLetras(event,this)" onkeyup="return validarInput(event,this)" required>
                <div class="invalid-feedback">
                    Ingrese solo letras
                </div>
            </div>

            <div class="col-6 col-md-3 mb-2">
                <label for="validationDefault04">Segundo Apellido</label>
                <input type="text" class="form-control is-invalid" id="validationDefault04" placeholder="Ingresa tu segundo apellido" name="user[second_surname]" onkeypress="return soloLetras(event,this)" onkeyup="return validarInput(event,this)" required>
                <div class="invalid-feedback">
                    Ingrese solo letras
                </div>
            </div>
        </div>

        <div class="form-row field">
            <div class="col-7 col-md-4 mb-2">
                <label for="validationDefault05">DNI</label>
                <input class="form-control is-invalid" id="validationDefault05" placeholder="Ingrese su nro de documento" type="number" onkeypress="return soloNumeros(event,this)" onkeyup="return validarInput(event,this)" name="user[document]" required></input>
                <div class="invalid-feedback">
                    Ingrese solo numeros
                </div>
            </div>
            <div class="col-5 col-md-3 mb-2">
                <label>Sexo</label>
                <select class="custom-select is-invalid" name="user[gender]" onChange="validarSelect(this)" required>
                    <option selected disabled value="">Elegir...</option>
                    <option value="Femenino">Femenino</option>
                    <option value="Masculino">Masculino</option>
                </select>
                <div class="invalid-feedback">Seleccione una opcion</div>
            </div>
            <div class="col-12 col-md-5 mb-2">
                <label for="validationDefault06">Telefono</label>
                <input class="form-control is-invalid" id="validationDefault06" placeholder="Ingrese su nro de telefono" type="number" onkeypress="return soloNumeros(event,this)" onkeyup="return validarInput(event,this)" name="user[phone]" required></input>
                <div class="invalid-feedback">
                    Ingrese solo numeros
                </div>
            </div>
        </div>


        <div class="form-row field">
            <div class="col-12">
                <label>Fecha de Nacimiento</label>
            </div>
            <div class="col-4 mb-3">
                <label for="validationDefaultDia">Dia</label>
                <select class="custom-select is-invalid" id="validationDefaultDia" onChange="validarSelect(this)" name="user[day]" required>
                    <option selected disabled value="">Elegir...</option>
                    <option value="01">01</option>
                    <option value="02">02</option>
                    <option value="03">03</option>
                    <option value="04">04</option>
                    <option value="05">05</option>
                    <option value="06">06</option>
                    <option value="07">07</option>
                    <option value="08">08</option>
                    <option value="09">09</option>
                    <option value="10">10</option>
                    <option value="11">11</option>
                    <option value="12">12</option>
                    <option value="13">13</option>
                    <option value="14">14</option>
                    <option value="15">15</option>
                    <option value="16">16</option>
                    <option value="17">17</option>
                    <option value="18">18</option>
                    <option value="19">19</option>
                    <option value="20">20</option>
                    <option value="21">21</option>
                    <option value="22">22</option>
                    <option value="23">23</option>
                    <option value="24">24</option>
                    <option value="25">25</option>
                    <option value="26">26</option>
                    <option value="27">27</option>
                    <option value="28">28</option>
                    <option value="29">29</option>
                    <option value="30">30</option>
                    <option value="31">31</option>
                </select>
                <div class="invalid-feedback">Seleccione una opcion</div>
            </div>

            <div class="col-5 mb-3">
                <label for="validationDefaultMes">Mes</label>
                <select class="custom-select is-invalid" id="validationDefaultMes" onChange="validarSelect(this)" name="user[month]" required>
                    <option selected disabled value="">Elegir...</option>
                    <option value="Enero">Enero</option>
                    <option value="Febrero">Febrero</option>
                    <option value="Marzo">Marzo</option>
                    <option value="Abril">Abril</option>
                    <option value="Mayo">Mayo</option>
                    <option value="Junio">Junio</option>
                    <option value="Julio">Julio</option>
                    <option value="Agosto">Agosto</option>
                    <option value="Septiembre">Septiembre</option>
                    <option value="Octubre">Octubre</option>
                    <option value="Noviembre">Noviembre</option>
                    <option value="Diciembre">Diciembre</option>
                </select>
                <div class="invalid-feedback">Seleccione una opcion</div>
            </div>

            <div class="col-3 mb-3">
                <label for="validationDefaultAño">Año</label>
                <input type="number" class="form-control is-invalid" id="validationDefaultAño" name="user[year]" onkeypress="return soloNumeros(event,this)" onkeyup="return validarInput(event,this)" required>
                <div class="invalid-feedback">
                    Ingrese solo numeros
                </div>
            </div>
        </div>

        <div class="form-row field">

            <div class="col-md-4 mb-3">
                <label for="validationCountry">Pais</label>
                <select class="custom-select is-invalid" id="validationCountry" name="user[country]" onChange="validarSelect(this)" required>
                    <option selected disabled value="">Elegir...</option>
                    <option value="Brasil">Brasil</option>
                    <option value="Colombia">Colombia</option>
                    <option value="Ecuador">Ecuador</option>
                    <option value="España">España</option>
                    <option value="Panama">Panama</option>
                    <option value="Peru">Peru</option>
                    <option value="Portugal">Portugal</option>
                    <option value="USA">USA</option>
                    <option value="Venezuela">Venezuela</option>
                </select>
                <div class="invalid-feedback">Seleccione una opcion</div>
            </div>
            <div class="col-md-4 mb-3">
                <label for="validationState">Estado</label>
                <input type="text" class="form-control is-invalid" id="validationState" name="user[state]" onkeypress="return soloLetras(event,this)" onkeyup="return validarInput(event,this)" required>
                <div class="invalid-feedback">
                    Ingrese solo letras
                </div>
            </div>

            <div class="col-md-4 mb-3">
                <label for="validationCity">Ciudad</label>
                <input type="text" class="form-control is-invalid" id="validationCity" name="user[city]" onkeypress="return soloLetras(event,this)" onkeyup="return validarInput(event,this)" required>
                <div class="invalid-feedback">
                    Ingrese solo letras
                </div>
            </div>
        </div>
        <div class="field">
            <label for="validationAddress">Dirección</label>
            <input type="text" class="form-control is-invalid" id="validationAddress" name="user[address]" onkeypress="return address(event,this)" onkeyup="return validarInput(event,this)" value="" required>
            <div class="invalid-feedback">
                El campo no puede estar vacio
            </div>
        </div>

        <div class="field">
            <label>Correo Electronico</label>
            <input class="form-control is-invalid" placeholder="Ingrese su correo electronico" name="user[email]" autofocus="autofocus" autocomplete="autocomplete" onkeypress="return address(event,this)" onkeyup="return validarInput(event,this)" value="" type="email" required></input>
            <div class="invalid-feedback">
                El campo no puede estar vacio
            </div>
        </div>

        <div class="field">
            <%= f.label :password, "contraseña" %>
            <% if @minimum_password_length %>
            <em>(minimo <%= @minimum_password_length %> caracteres )</em>
            <% end %><br />
            <%= f.password_field :password, autocomplete: "new-password" %>
        </div>

        <div class="field">
            <%= f.label :password_confirmation, "confirmar contraseña" %><br />
            <%= f.password_field :password_confirmation, autocomplete: "new-password" %>
        </div>

        <div class="field">
            <label for="validationDefault14">N° Referido</label>
            <input type="number" class="form-control" id="validationDefault14" name="user[num_user]" value="" required>
        </div>

        <div class="actions">
            <%= f.submit "Continuar", class:"btn btn-primary mt-3" %>
        </div>
        <% end %>

        <%= render "devise/shared/links" %>
    </div>

</div>

<script>
    function validarInput(e, input) {
        key = e.keyCode;
        if (key == 8) {
            valor2 = input.value.toLowerCase();

            if (valor2.trim() === "") {
                input.classList.remove("is-valid");
                input.classList.add("is-invalid");
            }
        }
    }

    function address(e, input) {
        key = e.keyCode || e.which;
        tecla = String.fromCharCode(key).toLowerCase();

        valor = input.value.toLowerCase();
        valor = valor.concat("", tecla);
        if (valor.trim() != "") {

            input.classList.remove("is-invalid");
            input.classList.add("is-valid");
            

            return true;
        }else if(valor.trim() != " "){
            input.value = "";
        }
        
    }

    function soloLetras(e, input) {
        key = e.keyCode || e.which;
        tecla = String.fromCharCode(key).toLowerCase();
        letras = "áéíóúabcdefghijklmnñopqrstuvwxyz";
        //especiales = [8, 46, 32];

        /*tecla_especial = false
        for (var i in especiales) {
            if (key == especiales[i]) {
                tecla_especial = true;
                break;
            }
        }
        */
        if (letras.indexOf(tecla) == -1) {

            return false;

        } else {
            valor = input.value.toLowerCase();
            valor = valor.concat("", tecla);

            if (valor != "") {
                input.classList.remove("is-invalid");
                input.classList.add("is-valid");
            }

            return true;
        }
    }

    function soloNumeros(e, input) {
        key = e.keyCode || e.which;
        tecla = String.fromCharCode(key).toLowerCase();
        letras = "1234567890";
        especiales = [];

        /*
        tecla_especial = false
        for (var i in especiales) {
            if (key == especiales[i]) {
                tecla_especial = true;
                break;
            }
        }
        */

        if (letras.indexOf(tecla) == -1) {

            return false;

        } else {

            valor = input.value.toLowerCase();
            valor = valor.concat("", tecla);

            if (valor != "") {
                input.classList.remove("is-invalid");
                input.classList.add("is-valid");
            }

            return true;
        }
    }

    function validarSelect(x) {
        select = x
        //num = y;
        coincidencia = false;

        if (select.value != "") {
            select.classList.remove("is-invalid");
            select.classList.add("is-valid");
        }
        /*
        if (num == 1) {
            valores_permit = ["soltero", "casado", "divorciado"];
        } else {
            valores_permit = ["informatica", "derecho", "administracion", "telecomunicaciones"];
        }

        for (j = 0; j < valores_permit.length; j++) {
            if (valor.value == valores_permit[j]) {
                coincicendia = true;
                values = valores_permit[j]
            }
        }
        if (coincidencia == false) {
            valor.value = values;
        } else {
            valor.value = " ";
        }
        */
    }
    /*
    function validar_email(valor) {
        

        if (/^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3,4})+$/.test(valor)) {
            console.log("La dirección de email " + valor + " es correcta.");
        } else {
            console.log("La dirección de email es incorrecta.");
        }
        
        if resultado === true{
            element.classList.remove("is-valid");
            element.classList.add("is-invalid");
        }
    
    }
    /*
    

    function limpia(inputs) {
        var val = inputs.value;
        var tam = val.length;
        for (i = 0; i < tam; i++) {
            if (!isNaN(val[i]))
                inputs.value = '';
        }
    }

    // Formatear valores de Inputs
    function textUpperCase() {
        x = this.value;
        this.value = x.toUpperCase();
    }

    var elegido = false;

    var elementosInput = document.getElementsByTagName('input'); //Elementos input

    for (var i = 0; i < elementosInput.length; i++) {

        if (elementosInput[i].type == 'text' && elegido == false) {
            var elegidoParaFoco = elementosInput[i];
            elegido = true;
        }

        if (elementosInput[i].type == 'text') {

            elementosInput[i].addEventListener('blur', textUpperCase);

            elementosInput[i].addEventListener('focus', textUpperCase);

        }

    }

    var elegidoTextA = false;

    var elementoTextArea = document.getElementsByTagName('textarea');

    for (var i = 0; i < elementoTextArea.length; i++) {

        if (elegidoTextA == false) {
            var elegidoParaFoco = elementoTextArea[i];
            elegidoTextA = true;
        }

        elementoTextArea[i].addEventListener('blur', textUpperCase);

        elementoTextArea[i].addEventListener('focus', textUpperCase);
    }
    //VALIDACIONES

    
    */
</script>